Version 4.0 HI-TECH Software Intermediate Code
"19 ecu/led/ecu_led.h
[; ;ecu/led/ecu_led.h: 19: typedef struct{
[s S1 :4 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S1 . port_name pin led_status ]
"15 ecu/led/ecu_led.c
[; ;ecu/led/ecu_led.c: 15: ret_status led_initialize(led_t *led){
[c E13 0 1 .. ]
[n E13 . R_NOK R_OK  ]
"22
[; ;ecu/led/ecu_led.c: 22:         gpio_pin_direction_initialize(led->port_name, led->pin, DIRECTION_OUTPUT);
[c E35 0 1 2 3 4 .. ]
[n E35 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
[c E17 0 1 2 3 4 5 6 7 .. ]
[n E17 . PIN0 PIN1 PIN2 PIN3 PIN4 PIN5 PIN6 PIN7  ]
[c E27 0 1 .. ]
[n E27 . DIRECTION_OUTPUT DIRECTION_INPUT  ]
"67 ecu/led/../../mcal/gpio/mcal_gpio.h
[; ;ecu/led/../../mcal/gpio/mcal_gpio.h: 67: ret_status gpio_pin_direction_initialize(port_index port,pin_index pin,direction direction);
[v _gpio_pin_direction_initialize `(E13 ~T0 @X0 0 ef3`E35`E17`E27 ]
"23 ecu/led/ecu_led.c
[; ;ecu/led/ecu_led.c: 23:         gpio_pin_write_value(led->port_name, led->pin, PIN_LOW);
[c E31 0 1 .. ]
[n E31 . PIN_LOW PIN_HIGH  ]
"69 ecu/led/../../mcal/gpio/mcal_gpio.h
[; ;ecu/led/../../mcal/gpio/mcal_gpio.h: 69: ret_status gpio_pin_write_value(port_index port,pin_index pin,pin_logic logic);
[v _gpio_pin_write_value `(E13 ~T0 @X0 0 ef3`E35`E17`E31 ]
"43 ecu/led/ecu_led.c
[; ;ecu/led/ecu_led.c: 43:         led->led_status = LED_ON;
[c E77 0 1 .. ]
[n E77 . LED_OFF LED_ON  ]
"71 ecu/led/../../mcal/gpio/mcal_gpio.h
[; ;ecu/led/../../mcal/gpio/mcal_gpio.h: 71: ret_status gpio_pin_toggle_value(port_index port,pin_index pin);
[v _gpio_pin_toggle_value `(E13 ~T0 @X0 0 ef2`E35`E17 ]
"15 ecu/led/ecu_led.c
[; ;ecu/led/ecu_led.c: 15: ret_status led_initialize(led_t *led){
[v _led_initialize `(E13 ~T0 @X0 1 ef1`*S1 ]
{
[e :U _led_initialize ]
[v _led `*S1 ~T0 @X0 1 r1 ]
[f ]
"16
[; ;ecu/led/ecu_led.c: 16:     ret_status ret = R_NOK;
[v _ret `E13 ~T0 @X0 1 a ]
[e = _ret . `E13 0 ]
"17
[; ;ecu/led/ecu_led.c: 17:     if((((void*)0) == led) || (led->port_name > 5U -1) ||
[e $ ! || || == -> -> -> 0 `i `*v `*S1 _led > -> . *U _led 0 `ui - -> 5 `ui -> -> 1 `i `ui > -> . *U _led 1 `ui - -> 8 `ui -> -> 1 `i `ui 3  ]
"18
[; ;ecu/led/ecu_led.c: 18:             (led->pin > 8U -1)){
{
"19
[; ;ecu/led/ecu_led.c: 19:         return ret;
[e ) _ret ]
[e $UE 2  ]
"20
[; ;ecu/led/ecu_led.c: 20:     }
}
[e $U 4  ]
"21
[; ;ecu/led/ecu_led.c: 21:     else{
[e :U 3 ]
{
"22
[; ;ecu/led/ecu_led.c: 22:         gpio_pin_direction_initialize(led->port_name, led->pin, DIRECTION_OUTPUT);
[e ( _gpio_pin_direction_initialize (3 , , -> . *U _led 0 `E35 -> . *U _led 1 `E17 . `E27 0 ]
"23
[; ;ecu/led/ecu_led.c: 23:         gpio_pin_write_value(led->port_name, led->pin, PIN_LOW);
[e ( _gpio_pin_write_value (3 , , -> . *U _led 0 `E35 -> . *U _led 1 `E17 . `E31 0 ]
"24
[; ;ecu/led/ecu_led.c: 24:         ret = R_OK;
[e = _ret . `E13 1 ]
"25
[; ;ecu/led/ecu_led.c: 25:     }
}
[e :U 4 ]
"26
[; ;ecu/led/ecu_led.c: 26:     return ret;
[e ) _ret ]
[e $UE 2  ]
"27
[; ;ecu/led/ecu_led.c: 27: }
[e :UE 2 ]
}
"35
[; ;ecu/led/ecu_led.c: 35: ret_status led_turn_on(led_t *led){
[v _led_turn_on `(E13 ~T0 @X0 1 ef1`*S1 ]
{
[e :U _led_turn_on ]
[v _led `*S1 ~T0 @X0 1 r1 ]
[f ]
"36
[; ;ecu/led/ecu_led.c: 36:     ret_status ret = R_NOK;
[v _ret `E13 ~T0 @X0 1 a ]
[e = _ret . `E13 0 ]
"37
[; ;ecu/led/ecu_led.c: 37:     if((((void*)0) == led) || (led->port_name > 5U -1) ||
[e $ ! || || == -> -> -> 0 `i `*v `*S1 _led > -> . *U _led 0 `ui - -> 5 `ui -> -> 1 `i `ui > -> . *U _led 1 `ui - -> 8 `ui -> -> 1 `i `ui 6  ]
"38
[; ;ecu/led/ecu_led.c: 38:             (led->pin > 8U -1)){
{
"39
[; ;ecu/led/ecu_led.c: 39:         return ret;
[e ) _ret ]
[e $UE 5  ]
"40
[; ;ecu/led/ecu_led.c: 40:     }
}
[e $U 7  ]
"41
[; ;ecu/led/ecu_led.c: 41:     else{
[e :U 6 ]
{
"42
[; ;ecu/led/ecu_led.c: 42:         gpio_pin_write_value(led->port_name, led->pin, PIN_HIGH);
[e ( _gpio_pin_write_value (3 , , -> . *U _led 0 `E35 -> . *U _led 1 `E17 . `E31 1 ]
"43
[; ;ecu/led/ecu_led.c: 43:         led->led_status = LED_ON;
[e = . *U _led 2 -> . `E77 1 `uc ]
"44
[; ;ecu/led/ecu_led.c: 44:         ret = R_OK;
[e = _ret . `E13 1 ]
"45
[; ;ecu/led/ecu_led.c: 45:     }
}
[e :U 7 ]
"46
[; ;ecu/led/ecu_led.c: 46:     return ret;
[e ) _ret ]
[e $UE 5  ]
"47
[; ;ecu/led/ecu_led.c: 47: }
[e :UE 5 ]
}
"55
[; ;ecu/led/ecu_led.c: 55: ret_status led_turn_off(led_t *led){
[v _led_turn_off `(E13 ~T0 @X0 1 ef1`*S1 ]
{
[e :U _led_turn_off ]
[v _led `*S1 ~T0 @X0 1 r1 ]
[f ]
"56
[; ;ecu/led/ecu_led.c: 56:     ret_status ret = R_NOK;
[v _ret `E13 ~T0 @X0 1 a ]
[e = _ret . `E13 0 ]
"57
[; ;ecu/led/ecu_led.c: 57:     if((((void*)0) == led) || (led->port_name > 5U -1) ||
[e $ ! || || == -> -> -> 0 `i `*v `*S1 _led > -> . *U _led 0 `ui - -> 5 `ui -> -> 1 `i `ui > -> . *U _led 1 `ui - -> 8 `ui -> -> 1 `i `ui 9  ]
"58
[; ;ecu/led/ecu_led.c: 58:             (led->pin > 8U -1)){
{
"59
[; ;ecu/led/ecu_led.c: 59:         return ret;
[e ) _ret ]
[e $UE 8  ]
"60
[; ;ecu/led/ecu_led.c: 60:     }
}
[e $U 10  ]
"61
[; ;ecu/led/ecu_led.c: 61:     else{
[e :U 9 ]
{
"62
[; ;ecu/led/ecu_led.c: 62:         gpio_pin_write_value(led->port_name, led->pin, PIN_LOW);
[e ( _gpio_pin_write_value (3 , , -> . *U _led 0 `E35 -> . *U _led 1 `E17 . `E31 0 ]
"63
[; ;ecu/led/ecu_led.c: 63:         led->led_status = LED_OFF;
[e = . *U _led 2 -> . `E77 0 `uc ]
"64
[; ;ecu/led/ecu_led.c: 64:         ret = R_OK;
[e = _ret . `E13 1 ]
"65
[; ;ecu/led/ecu_led.c: 65:     }
}
[e :U 10 ]
"66
[; ;ecu/led/ecu_led.c: 66:     return ret;
[e ) _ret ]
[e $UE 8  ]
"67
[; ;ecu/led/ecu_led.c: 67: }
[e :UE 8 ]
}
"75
[; ;ecu/led/ecu_led.c: 75: ret_status led_turn_toggle(led_t *led){
[v _led_turn_toggle `(E13 ~T0 @X0 1 ef1`*S1 ]
{
[e :U _led_turn_toggle ]
[v _led `*S1 ~T0 @X0 1 r1 ]
[f ]
"76
[; ;ecu/led/ecu_led.c: 76:     ret_status ret = R_NOK;
[v _ret `E13 ~T0 @X0 1 a ]
[e = _ret . `E13 0 ]
"77
[; ;ecu/led/ecu_led.c: 77:     if((((void*)0) == led) || (led->port_name > 5U -1) ||
[e $ ! || || == -> -> -> 0 `i `*v `*S1 _led > -> . *U _led 0 `ui - -> 5 `ui -> -> 1 `i `ui > -> . *U _led 1 `ui - -> 8 `ui -> -> 1 `i `ui 12  ]
"78
[; ;ecu/led/ecu_led.c: 78:             (led->pin > 8U -1)){
{
"79
[; ;ecu/led/ecu_led.c: 79:         return ret;
[e ) _ret ]
[e $UE 11  ]
"80
[; ;ecu/led/ecu_led.c: 80:     }
}
[e $U 13  ]
"81
[; ;ecu/led/ecu_led.c: 81:     else{
[e :U 12 ]
{
"82
[; ;ecu/led/ecu_led.c: 82:         gpio_pin_toggle_value(led->port_name, led->pin);
[e ( _gpio_pin_toggle_value (2 , -> . *U _led 0 `E35 -> . *U _led 1 `E17 ]
"83
[; ;ecu/led/ecu_led.c: 83:         ret = R_OK;
[e = _ret . `E13 1 ]
"84
[; ;ecu/led/ecu_led.c: 84:     }
}
[e :U 13 ]
"85
[; ;ecu/led/ecu_led.c: 85:     return ret;
[e ) _ret ]
[e $UE 11  ]
"86
[; ;ecu/led/ecu_led.c: 86: }
[e :UE 11 ]
}
